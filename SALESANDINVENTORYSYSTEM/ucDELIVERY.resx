<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BTNBACK.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnAg8FNyU4/nQ0AAAA6klEQVQ4T5WQvWoCQRhFVxsREQQJ
        CBa+gaUWQnwD7XwIy1gJFjY+SEpbW8HextIyoI0IxsJCiYXr+da7ysa/nQMHZu43F2bGe4bv+3Ut3aCY
        wD7+KooPpTQO0dhhHhMav4aDBZzif444wy5mdTwKgzIu8B0r/FTtBuEoGMfjgDVVLxCk8NumMVliRvUL
        BPb7PTyh8Yf27gFOMMxD2qpGYdDCPW4VBbCv4A+GjDW6h2EV59peISvhBo2F4sdwIKVlBPJOUOc2ityg
        aLcwJorcoJhE+9AvRW5Q/MA15hS5QbGJDW3doVzUEjzvDMMMePxecuSQAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="BTNSUPPLIER.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA55JREFUSEttlntMzlEYx7OhC1HuRSy6kFxGf5gst4hhctnabC6r5baJuQ8txcZK
        botYMdfWRY1ospikbBjGzKXZ/I1//V0+39Pzvt5632f77Jzzfc5z7uf8fkEe6+7uHtzV1VUM7fAKitAm
        k8ZbFWdo89A64Sm0+NDWR3sOvywsKIjCBngDBTRSS/obFLSNcj+rpg7S0a7BEAinrIHFQDmkUA4zbRy0
        W5jr4CS8hWOwFq4q79u4DG0RXPHo5AdBKXRADcRIxz+U/AvlnVFYBfU4ZpPOgQZIM7fX0DZCpU8HceRb
        SZfATpgi3a8DhAEIlfAdvkEVWoi55Y9E0+wewiqTpYdQPkhaCzfIB54Bgkb+CObDdKiCbHNrpImgzdcg
        okxW3BjKhbAQmiDDdL8lOgF5ls+CU9BMxUhXAaMcBeeg1CQ1pJkfgs9wkXKEdPI6AK2ukgzhEkImDCSv
        hrWuP2G1VXFGWZuszUyAeIiDZDgLacRNNG0WvLMwF1iIc6vlz4BGmgfabJ2wWPMlUU/H+LZxMwC34C40
        KcaZGkcotPwI8ndAa66RXQdtbi5o5NNgEoyEZOrPJJ0hLK+ZhUOoa1xGYRk8gBWQARrFUQIOk94HHYCv
        oMvYDNWQhV9LqZloQErroAHdu3fOEFPhA+hGKvgHJJhPN3UHPAPNqsUa3gUlEEpZt1eXTuuvZR3tGvYY
        wkooV57KmeR1KsY6pxm6jt4EUr1HauQABOpAM3b3wWsIm6h02vKXQR0Md84+hh4Nr0FvlR5HLY+DNnQA
        vkAx+f4W4oJ2g87zMPgIHRqVuXsZPi1ZI35dzljQqD2ovAb07IRZiAsqghxEvZafoI6896nwNfTxoKeh
        90aaEZsCNfh7OqAQDJreAlKdeU23gvL/KfoYPj3F2uwKuNCHMtD+VBPfM0AKuok6WvrA3ANtXplzBjB8
        WiId1XXEpHugrPdI90bHNRGt56mnoCOoJVoOGtVmKHHOAEagZ4ncu+NraFuIzbeid3l0vZdCKRV0o3Og
        wKr4mU8HfntAXDb06kBXvB6mgk6PRr8H9loVP1MH+LXOi2EuBJtL7W0HLdEoj7AftLG6aH9BtzMfcl2F
        AIZPm6x7oo+8BqfvuPbP8yXUc6GDEq3Kj2E9aHPaqHic9DxkWXt+Rp0I/PpzOAIamC6WnvAnID0JGiFV
        HfwBfez10d4H+mR20ki6tRfQqKO36yUoVnumZ0IfJL2874Fj3h3xD+6Zem7ZLJwwAAAAAElFTkSuQmCC
</value>
  </data>
</root>