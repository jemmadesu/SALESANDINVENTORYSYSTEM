<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Panel2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="LBLEXIT.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Label8.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DGVEXP.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>